// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create/employees": {
            "post": {
                "description": "Create a new employee with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee object that needs to be created",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.Employee"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get employee details by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employees"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID (UUID)",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Employee"
                        }
                    },
                    "400": {
                        "description": "Employee ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error retrieving employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Employee": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_code": {
                    "type": "string"
                },
                "employment_type": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "hire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "prefix_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Employee Management API",
	Description:      "API for managing employees with PostgreSQL database",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
