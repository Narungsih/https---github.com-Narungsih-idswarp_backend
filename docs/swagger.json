{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/employee": {
            "post": {
                "description": "Create a new employee with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Create a new employee",
                "parameters": [
                    {
                        "description": "Employee object that needs to be created",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Employee"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handlers.Employee"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or missing required fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error creating employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "description": "Get employee details by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get employee by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Employee"
                        }
                    },
                    "400": {
                        "description": "Employee ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error retrieving employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update employee details by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated employee object",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Employee"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or Employee ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error updating employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete employee by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Delete an employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Employee ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error deleting employee",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get paginated list of employees with optional sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get list of employees with pagination and sorting",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by field (id, first_name, last_name, created_at, etc.)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (asc, desc) default: asc",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in first_name, last_name, email",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.EmployeeListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error retrieving employees",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.Employee": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "employee_code": {
                    "type": "string"
                },
                "employment_type": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "hire_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "position": {
                    "type": "string"
                },
                "prefix_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.EmployeeListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.Employee"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        }
    }
}